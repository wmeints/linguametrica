on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    name: Build, test, and package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.11
      - name: Set up poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: 1.7.1
      - name: Install dependencies
        run: poetry install
      - name: Lint code
        run: poetry run flake8 linguametrica --config .flake8
      - name: Run tests
        run: poetry run python -m pytest --cov=linguametrica -k "not integration" --cov-report=term tests
      - name: Generate packages
        run: poetry build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/
          name: packages

  publish-to-pypi:
    name: Publish package
    needs:
      - build
    if: startsWith(github.ref, '/refs/tags')
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/linguametrica
    permissions:
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-test-pypi:
    name: Publish to test PyPI environment
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/<package-name>
    permissions:
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - name: Publish package to test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
